{"version":3,"file":"js/app.c65c3d6e.js","mappings":"uJACEA,EAAAA,EAAAA,IAAgDC,EAAAA,CAAnCC,iBAAiB,IAAIC,QAAQ,K,qFCA1CC,EAAAA,EAAAA,GAAwB,UAApB,mBAAe,K,GACdC,MAAM,a,SAgBmBA,MAAM,gB,UAMlCD,EAAAA,EAAAA,GAUM,OAVDC,MAAM,SAAO,EAChBD,EAAAA,EAAAA,GAAiH,SAA9G,+GAEHA,EAAAA,EAAAA,GAA4H,SAAzH,0HAEHA,EAAAA,EAAAA,GAA2D,SAAxD,yDAEHA,EAAAA,EAAAA,GAA+G,SAA5G,6GAEHA,EAAAA,EAAAA,GAAkI,SAA/H,iIAA2H,K,sHAhClIE,GACAF,EAAAA,EAAAA,GAiCM,MAjCNG,EAiCM,gBAhCJC,EAAAA,EAAAA,IASEC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAPoBC,SAASC,EAAAA,mBAApBC,K,WAFXZ,EAAAA,EAAAA,IASEa,EAAAA,CAREC,KAAK,OAEJC,IAAKH,E,WACLI,IAAKC,EAAAA,OAAOL,GACZM,aAAcP,EAAAA,QACdN,OAAK,QAAEY,EAAAA,SAASL,IAChBO,WAAYF,EAAAA,WACZG,kBAAmBH,EAAAA,iB,2EAEVI,EAAAA,aAAU,WAAxBb,EAAAA,EAAAA,IAAsF,U,MAA3Dc,QAAK,oBAAEL,EAAAA,WAAAA,EAAAA,aAAAA,IAAWZ,MAAM,kBAAiB,eAAS,eAC9DgB,EAAAA,YAAeA,EAAAA,QAAWA,EAAAA,UAAaA,EAAAA,cACtD,iBADkE,WAAlEb,EAAAA,EAAAA,IACS,U,MAD4Dc,QAAK,oBAAEL,EAAAA,WAAAA,EAAAA,aAAAA,IAAWZ,MAAM,mBAAmBkB,SAAA,IAAS,eAE3GF,EAAAA,SAAM,WAApBb,EAAAA,EAAAA,IAAyF,U,MAAlEc,QAAK,oBAAEL,EAAAA,cAAAA,EAAAA,gBAAAA,IAAcZ,MAAM,mBAAkB,kBAAY,eAClEgB,EAAAA,WAAQ,WAAtBb,EAAAA,EAAAA,IAA2F,U,MAAlEc,QAAK,oBAAEL,EAAAA,cAAAA,EAAAA,gBAAAA,IAAcZ,MAAM,gBAAe,qBAAe,eACpEgB,EAAAA,eAAY,WAA1Bb,EAAAA,EAAAA,IAA0E,SAA1EgB,EAAiD,sBAAgB,gBACjEC,EAAAA,EAAAA,IAIEC,EAAAA,CAHGC,gBAAiBC,OAAOC,KAAKR,EAAAA,iBAC7BS,kBAAmBb,EAAAA,SACpBD,IAAI,Y,gDAERe,KAUM,G,UCjCH1B,MAAM,Q,0CAAXG,EAAAA,EAAAA,IAIM,MAJNF,EAIM,gBAHJE,EAAAA,EAAAA,IAEMC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAFmDY,EAAAA,SAAO,CAAxBW,EAAOC,M,WAA/CzB,EAAAA,EAAAA,IAEM,OAFDM,KAAK,OAAOT,OAAK,SAAC,SAAsEY,EAAAA,SAASgB,KAAnClB,IAAKkB,I,QACnED,GAAM,M,QAMf,OACEE,KAAM,YACNC,MAAO,CACLjB,aAAckB,OACdjB,WAAYiB,QAEdC,QAAS,CACPC,QACEC,KAAKpC,QAAUqC,MAAM9B,SAAS6B,KAAKrB,eAAeuB,KAAK,GACzD,EACAC,YAAYV,GACK,cAAXA,GACFO,KAAKI,eAEe,IAAlBX,EAAOY,QACTL,KAAKM,UAAUb,EAEnB,EACAa,UAAUb,GACR,IAAK,IAAIc,EAAI,EAAGA,EAAIP,KAAKrB,aAAc4B,IACrC,GAAwB,KAApBP,KAAKpC,QAAQ2C,GAAW,CAC1BP,KAAKpC,QAAQ2C,GAAKd,EAClB,KACF,CAEF,IAAIe,EAAaR,KAAKpC,QAAQ6C,OAAOF,GAAY,KAANA,IACvCC,GACFR,KAAKU,MAAM,oBAAqBF,EAAYR,KAAKpC,QAErD,EACAwC,eACE,IAAK,IAAIG,EAAIP,KAAKrB,aAAe,EAAG4B,GAAK,EAAGA,IAC1C,GAAwB,KAApBP,KAAKpC,QAAQ2C,GAAW,CAC1BP,KAAKpC,QAAQ2C,GAAK,GAClB,KACF,CAEFP,KAAKU,MAAM,qBAAqB,EAAOV,KAAKpC,QAC9C,EACA+C,SAASjB,GACP,IAAIkB,EAASZ,KAAKpB,WAAWiC,MAAM,IAC/BC,EAAeF,EAAOlB,GAAOqB,cAC7BC,EAAehB,KAAKpC,QAAQ8B,GAAOqB,cACvC,OAAID,IAAiBE,EACZ,OAELJ,EAAOK,SAASD,GACX,QAEF,OACT,GAEFE,KAAM,WACJ,MAAO,CACLtD,QAASqC,MAAM9B,SAAS6B,KAAKrB,eAAeuB,KAAK,IACjDiB,sBAAuB,EAE3B,G,QC3DF,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,SCROtD,MAAM,Y,wDAAXG,EAAAA,EAAAA,IAMM,MANNF,EAMM,gBALJE,EAAAA,EAAAA,IAIMC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAJmCY,EAAAA,SAAO,CAAtBuC,EAAK3B,M,WAA/BzB,EAAAA,EAAAA,IAIM,OAJDH,MAAM,OAAwCU,IAAKkB,G,gBACtDzB,EAAAA,EAAAA,IAEMC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IADqBmD,GAAI,CAAlB7C,EAAIkB,M,WADjBzB,EAAAA,EAAAA,IAEM,OAFDH,OAAK,SAAC,MAAoBY,EAAAA,SAASF,KACNA,IAAKkB,EAAQX,QAAK,GAAEL,EAAAA,SAASF,K,QAASA,GAAG,S,mBAOjF,OACEmB,KAAM,eACNC,MAAO,CACLR,gBAAiBa,OAEnBH,QAAS,CACPwB,SAAS9C,GACHwB,KAAKuB,cAAc/C,IAGvBwB,KAAKU,MAAM,oBAA6B,QAARlC,EAAgB,YAAcA,EAChE,EACAgD,YAAYhD,GACVwB,KAAKyB,SAAWjD,CAClB,EACAmC,SAASnC,GACP,OAAIwB,KAAKyB,WAAajD,GACpBkD,OAAOC,YAAW,KAChB3B,KAAKyB,SAAW,EAAC,GAChB,KACI,SAEFzB,KAAKuB,cAAc/C,GAAO,WAAa,EAChD,EACA+C,cAAc/C,GACZ,OAAOwB,KAAKZ,gBAAgBwC,OAAOX,SAASzC,EAC9C,GAEF0C,KAAM,WACJ,MAAO,CACLO,SAAU,GACV7D,QAAS,CACP,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAGpD,GCzCF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QJiCA,GACE+B,KAAM,cACNkC,WAAY,CACVC,UAAS,EAAEC,aAAYA,GAEzBnC,MAAO,CACLjC,iBAAkBkC,OAClBjC,QAASiC,QAEXqB,KAAM,WACJ,MAAO,CACLc,eAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,cAAc,EACdC,SAAUpC,MAAMD,KAAKrC,kBAAkBuC,KAAK,IAC5Cd,gBAAiB,CAAC,EAClBkv3mC,EACAC,SAAU,CACR3D,WAAY,WACV,OAAOoB,KAAKsC,WAAWE,KAAKC,MAAMD,KAAKE,SAAW1C,KAAKsC,WAAWjC,QACpE,GAEFsC,UACEjB,OAAOkB,iBAAiB,WAAYC,IAClC7C,KAAK8C,cAAcD,EAAErE,IAAI,GAE7B,EACAsB,QAAS,CACPgD,cAActE,GACZ,IAAIuE,EAAWvE,EAAIuC,cACff,KAAKZ,gBAAgB2D,GACvB/C,KAAKgD,MAAM,YAAYxB,YAAYuB,IAGrC/C,KAAKgD,MAAMhD,KAAKiD,OAAOjD,KAAKgC,iBAAiB,GAAG7B,YAAY3B,GAChD,UAARA,GAAmBwB,KAAKiC,YAC1BjC,KAAKkD,YAET,EACAC,eACEnD,KAAKgC,eAAiB,EACtBhC,KAAKiC,WAAajC,KAAKkC,OAASlC,KAAKmC,SAAWnC,KAAKoC,cAAe,EACpEpC,KAAKqC,SAAWpC,MAAMD,KAAKrC,kBAAkBuC,KAAK,IAClD,IAAK,IAAIK,EAAI,EAAGA,GAAKP,KAAKrC,iBAAkB4C,IAC1CP,KAAKgD,MAAMhD,KAAKiD,OAAO1C,IAAI,GAAGR,OAElC,EACAY,SAASnC,GACP,OAAIA,EAAMwB,KAAKgC,eAAuB,mBAClCxD,IAAQwB,KAAKgC,eAAuB,kBACpCxD,EAAMwB,KAAKgC,eAAuB,oBAAtC,CACF,EACAiB,OAAOzE,GACL,MAAO,WAAaA,CACtB,EACA4E,SAAS5E,GACPwB,KAAK8C,cAActE,EACrB,EACA6E,gBAAgBC,EAAQC,GACtBvD,KAAKiC,WAAaqB,EACdtD,KAAKiC,aACPjC,KAAKqC,SAASrC,KAAKgC,eAAiB,GAAKuB,EAAK3B,KAAK,IAAIb,cAE3D,EACAmC,YACElD,KAAKiC,YAAa,EAClB,IAAI5D,EAAU2B,KAAKqC,SAASrC,KAAKgC,eAAiB,GAClD,IAAKhC,KAAKsC,WAAWrB,SAAS5C,GAG5B,OAFA2B,KAAKoC,cAAe,OACpBV,OAAOC,YAAW,KAAQ3B,KAAKoC,cAAe,CAAI,GAAK,KAGzDpC,KAAKwD,qBAAqBnF,GACtBA,IAAY2B,KAAKpB,WAAWmC,gBAC9Bf,KAAKkC,QAAS,GAEZ7D,IAAY2B,KAAKpB,WAAWmC,eAAiBf,KAAKgC,iBAAmB7D,SAAS6B,KAAKrC,kBACrFqC,KAAKmC,UAAW,EAEhBnC,KAAKgC,gBAET,EACAwB,qBAAqBD,GACnB,IAAI3F,EAAU2F,EAAK1C,MAAM,IACzBjD,EAAQ6F,SAAQC,IACT1D,KAAKpB,WAAWqC,SAASyC,KAC5B1D,KAAKZ,gBAAgBsE,IAAM,EAC7B,GAEJ,IKhIJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QNFA,GACE/D,KAAM,MACNkC,WAAY,CACV8B,YAAWA,IOHf,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,SCNAC,EAAAA,EAAAA,IAAUC,GAAKC,MAAM,O,GCFjBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,WCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASzE,EAAI,EAAGA,EAAIkE,EAASpE,OAAQE,IAAK,CACrCqE,EAAWH,EAASlE,GAAG,GACvBsE,EAAKJ,EAASlE,GAAG,GACjBuE,EAAWL,EAASlE,GAAG,GAE3B,IAJA,IAGI0E,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASvE,OAAQ6E,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAazF,OAAOC,KAAK2E,EAAoBS,GAAGjE,OAAM,SAASjC,GAAO,OAAOyF,EAAoBS,EAAElG,GAAKoG,EAASM,GAAK,IAChKN,EAASO,OAAOD,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASU,OAAO5E,IAAK,GACrB,IAAI6E,EAAIP,SACET,IAANgB,IAAiBT,EAASS,EAC/B,CACD,CACA,OAAOT,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIvE,EAAIkE,EAASpE,OAAQE,EAAI,GAAKkE,EAASlE,EAAI,GAAG,GAAKuE,EAAUvE,IAAKkE,EAASlE,GAAKkE,EAASlE,EAAI,GACrGkE,EAASlE,GAAK,CAACqE,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoBoB,EAAI,SAASf,GAChC,IAAIgB,EAAShB,GAAUA,EAAOiB,WAC7B,WAAa,OAAOjB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBuB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNArB,EAAoBuB,EAAI,SAASnB,EAASqB,GACzC,IAAI,IAAIlH,KAAOkH,EACXzB,EAAoB0B,EAAED,EAAYlH,KAASyF,EAAoB0B,EAAEtB,EAAS7F,IAC5Ea,OAAOuG,eAAevB,EAAS7F,EAAK,CAAEqH,YAAY,EAAMC,IAAKJ,EAAWlH,IAG3E,C,eCPAyF,EAAoB8B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOhG,MAAQ,IAAIiG,SAAS,cAAb,EAGhB,CAFE,MAAOpD,GACR,GAAsB,kBAAXnB,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBuC,EAAoB0B,EAAI,SAASO,EAAKC,GAAQ,OAAO9G,OAAO+G,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,C,eCKtG,IAAII,EAAkB,CACrB,IAAK,GAaNtC,EAAoBS,EAAEQ,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BxF,GAC/D,IAKIgD,EAAUsC,EALV5B,EAAW1D,EAAK,GAChByF,EAAczF,EAAK,GACnB0F,EAAU1F,EAAK,GAGIX,EAAI,EAC3B,GAAGqE,EAASiC,MAAK,SAASC,GAAM,OAA+B,IAAxBP,EAAgBO,EAAW,IAAI,CACrE,IAAI5C,KAAYyC,EACZ1C,EAAoB0B,EAAEgB,EAAazC,KACrCD,EAAoBO,EAAEN,GAAYyC,EAAYzC,IAGhD,GAAG0C,EAAS,IAAIjC,EAASiC,EAAQ3C,EAClC,CAEA,IADGyC,GAA4BA,EAA2BxF,GACrDX,EAAIqE,EAASvE,OAAQE,IACzBiG,EAAU5B,EAASrE,GAChB0D,EAAoB0B,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOvC,EAAoBS,EAAEC,EAC9B,EAEIoC,EAAqBC,KAAK,sBAAwBA,KAAK,uBAAyB,GACpFD,EAAmBtD,QAAQgD,EAAqBQ,KAAK,KAAM,IAC3DF,EAAmBG,KAAOT,EAAqBQ,KAAK,KAAMF,EAAmBG,KAAKD,KAAKF,G,IC/CvF,IAAII,EAAsBlD,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,KAAO,IACjHkD,EAAsBlD,EAAoBS,EAAEyC,E","sources":["webpack://5bukv/./src/App.vue","webpack://5bukv/./src/components/FiveLetters.vue","webpack://5bukv/./src/components/InputWord.vue","webpack://5bukv/./src/components/InputWord.vue?1245","webpack://5bukv/./src/components/GameKeyboard.vue","webpack://5bukv/./src/components/GameKeyboard.vue?e6bc","webpack://5bukv/./src/components/FiveLetters.vue?a835","webpack://5bukv/./src/App.vue?7ccd","webpack://5bukv/./src/main.js","webpack://5bukv/webpack/bootstrap","webpack://5bukv/webpack/runtime/chunk loaded","webpack://5bukv/webpack/runtime/compat get default export","webpack://5bukv/webpack/runtime/define property getters","webpack://5bukv/webpack/runtime/global","webpack://5bukv/webpack/runtime/hasOwnProperty shorthand","webpack://5bukv/webpack/runtime/jsonp chunk loading","webpack://5bukv/webpack/startup"],"sourcesContent":["<template>\n  <FiveLetters numberOfAttempts=\"6\" letters=\"5\" />\n</template>\n\n<script>\nimport FiveLetters from './components/FiveLetters.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    FiveLetters\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n:root {\n  --letterBoxSize: 48px;\n  --letterSize: 36px;\n  --letterSpacingSize: 58px;\n}\n</style>\n","<template>\n  <h1>5 букв (Wordle)</h1>\n  <div class=\"inputWord\">\n    <inputWord\n        type=\"text\"\n        v-for=\"attempt in parseInt(numberOfAttempts)\"\n        :key=\"attempt\"\n        :ref=\"setRef(attempt)\"\n        :lettersCount=\"letters\"\n        :class=\"getClass(attempt)\"\n        :secretWord=\"secretWord\"\n        @event-word-filled=\"filledWordParse\"\n    />\n    <button v-if=\"filledWord\" @click=\"checkWord\" class=\"btn btn-normal\">Проверить</button>\n    <button v-if=\"!filledWord && !youWin && !youLoose && !wordNotExist\" @click=\"checkWord\" class=\"btn btn-disabled\" disabled>Проверить\n    </button>\n    <button v-if=\"youWin\" @click=\"startNewGame\" class=\"btn btn-success\">Вы победили!</button>\n    <button v-if=\"youLoose\" @click=\"startNewGame\" class=\"btn btn-fail\">Вы проиграли :(</button>\n    <button v-if=\"wordNotExist\" class=\"btn btn-fail\">Такого слова нет</button>\n    <gameKeyboard\n        :disabledLetters=\"Object.keys(disabledLetters)\"\n        @event-key-pressed=\"keyPress\"\n        ref=\"keyboard\"\n    />\n    <div class=\"rules\">\n      <p>В начале игры появляется поле, состоящее из 30 клеток, по пять штук в строчках и по шесть штук в столбцах.</p>\n\n      <p>В это поле можно вписать шесть слов, состоящих из пяти букв. Принимаются только существительные в единственнем числе.</p>\n\n      <p>Ниже клавиатура на которой показывается статус букв.</p>\n\n      <p>Начинайте вводить любое слово, как например слово «океан», нажмите на кнопку Ввод и буквы поменяют цвет.</p>\n\n      <p>Расшифровка такая — желтая буква — слово на своем месте, белая — есть в слове но в другом месте, серая — буквы в слове нет.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InputWord from './InputWord.vue'\nimport GameKeyboard from './GameKeyboard.vue'\n\nexport default {\n  name: 'FiveLetters',\n  components: {\n    InputWord, GameKeyboard\n  },\n  props: {\n    numberOfAttempts: String,\n    letters: String,\n  },\n  data: function () {\n    return {\n      currentAttempt: 1,\n      filledWord: false,\n      youWin: false,\n      youLoose: false,\n      wordNotExist: false,\n      attempts: Array(this.numberOfAttempts).fill(''),\n      disabledLetters: {},\n      dictionary: ['аббат', 'абвер', 'абзац', 'аборт', 'абрек', 'абрис', 'абхаз', 'аванс', 'авеню', 'аверс', 'авизо', 'авось', 'аврал', 'автор', 'агент', 'агнат', 'агнец', 'адепт', 'адрес', 'адрон', 'азарт', 'азиат', 'аймак', 'айран', 'айрол', 'айсор', 'акажу', 'акант', 'акрил', 'аксис', 'аксон', 'актер', 'актив', 'актин', 'акула', 'акциз', 'акция', 'аларм', 'алгол', 'алеут', 'алиби', 'алкаш', 'алкил', 'аллах', 'аллея', 'аллод', 'аллюр', 'алмаз', 'алонж', 'алтей', 'алтын', 'алчба', 'алыча', 'альва', 'альфа', 'амбал', 'амбар', 'амбра', 'амбре', 'амвон', 'амеба', 'аминь', 'ампер', 'ампир', 'анаша', 'ангар', 'ангел', 'ангоб', 'анион', 'анкер', 'анонс', 'антей', 'антик', 'антре', 'анчар', 'аншеф', 'аорта', 'апекс', 'аплит', 'апноэ', 'апорт', 'апрош', 'арбуз', 'аргал', 'аргус', 'арден', 'ареал', 'арека', 'арена', 'ариец', 'аркан', 'армия', 'армюр', 'армяк', 'арсин', 'артос', 'архар', 'архей', 'архив', 'аршин', 'асана', 'аскер', 'аскет', 'аспид', 'астат', 'астма', 'астра', 'асцит', 'атака', 'атлас', 'атлет', 'атолл', 'атрий', 'аттик', 'аулос', 'афера', 'афина', 'афиша', 'ахеец', 'ахилл', 'ацтек', 'ашрам', 'аэроб', 'аэрон', 'бабай', 'бабка', 'бабье', 'багаж', 'багги', 'багер', 'багет', 'багор', 'бадан', 'бадья', 'базар', 'базис', 'байга', 'байда', 'бакан', 'бакен', 'бакун', 'бакши', 'балда', 'балет', 'балка', 'балок', 'балык', 'бальи', 'банан', 'банда', 'банту', 'барак', 'баран', 'бареж', 'баржа', 'барий', 'барит', 'барич', 'барон', 'барыш', 'басма', 'баснь', 'басок', 'басон', 'бастр', 'батан', 'батат', 'батек', 'батог', 'батон', 'батуд', 'батут', 'батыр', 'бахта', 'бахус', 'бахча', 'бахши', 'бачки', 'бачок', 'башка', 'башли', 'башня', 'бегун', 'бедка', 'бедро', 'безик', 'бейка', 'бекар', 'бекас', 'бекон', 'белек', 'белец', 'белка', 'белое', 'белок', 'белый', 'белая', 'белье', 'беляк', 'беляш', 'бенди', 'бердо', 'берег', 'берет', 'берма', 'берце', 'бетон', 'биакс', 'бивак', 'бивни', 'бигус', 'бидон', 'бизон', 'билет', 'билль', 'билон', 'бином', 'бионт', 'биота', 'биржа', 'бирка', 'бирюк', 'бирюч', 'бисер', 'бистр', 'битва', 'битка', 'биток', 'битум', 'битый', 'битье', 'битюг', 'благо', 'блажь', 'бланк', 'блато', 'блеск', 'близь', 'блинт', 'блоха', 'блуза', 'блюдо', 'блюмс', 'блядь', 'бляха', 'бобер', 'бобик', 'бобок', 'богач', 'бодун', 'бодяк', 'божба', 'божок', 'бозон', 'боинг', 'бойня', 'болид', 'болюс', 'бомба', 'бонза', 'бонмо', 'бонна', 'бонус', 'борат', 'бордо', 'борей', 'борец', 'борид', 'боров', 'борок', 'борть', 'босяк', 'ботва', 'ботик', 'бочаг', 'бочар', 'бочка', 'бочок', 'бояре', 'браво', 'брага', 'брада', 'брама', 'брань', 'брасс', 'бреве', 'брейк', 'бремя', 'брешь', 'бридж', 'брика', 'бриль', 'бритт', 'бровь', 'бронх', 'бронь', 'брошь', 'брыжи', 'брыла', 'брюки', 'брюхо', 'бубен', 'бубна', 'бубон', 'бугай', 'бугор', 'будка', 'будни', 'будра', 'будяк', 'бузун', 'букан', 'буква', 'букет', 'букле', 'букля', 'букол', 'булат', 'булга', 'булка', 'булла', 'бурак', 'буран', 'бурат', 'бурда', 'бурка', 'бурре', 'бурса', 'бурун', 'бурят', 'бутан', 'бутен', 'бутил', 'бутон', 'бутса', 'бутуз', 'буфер', 'буфет', 'бухло', 'бухта', 'быдло', 'былка', 'былое', 'былье', 'бытие', 'бытье', 'бычок', 'бьюик', 'бэнди', 'бювар', 'бювет', 'бюкса', 'вабик', 'вагон', 'вазон', 'вакат', 'вакса', 'вакуф', 'валах', 'валеж', 'валек', 'валер', 'валет', 'валец', 'валик', 'валка', 'валок', 'валуй', 'валух', 'вальс', 'ванна', 'ванта', 'вапор', 'варан', 'варна', 'варок', 'варяг', 'ватин', 'ватка', 'вафля', 'вахня', 'вахта', 'вдова', 'вебер', 'ведро', 'ведун', 'вежда', 'везир', 'вейка', 'векша', 'велик', 'велит', 'вельс', 'велюр', 'венгр', 'венед', 'венет', 'венец', 'венец', 'веник', 'вента', 'вепрь', 'верба', 'вервь', 'веред', 'верес', 'верея', 'верже', 'верфь', 'верша', 'весло', 'весна', 'весок', 'весть', 'ветвь', 'ветер', 'ветка', 'ветла', 'вечер', 'вешка', 'вещее', 'вещун', 'взбег', 'взвар', 'взвод', 'взвоз', 'вздор', 'вздох', 'взлет', 'взлом', 'взмах', 'взмет', 'взмыв', 'взнос', 'взрез', 'взрыв', 'взрыд', 'взыск', 'вивер', 'видео', 'видик', 'видок', 'визаж', 'визир', 'визит', 'вилка', 'вилла', 'вилок', 'винцо', 'виола', 'вираж', 'вирус', 'вирша', 'виски', 'висок', 'вития', 'виток', 'витье', 'вихор', 'вихрь', 'вишну', 'вклад', 'влага', 'вобла', 'вогул', 'водка', 'вожак', 'вождь', 'вожжа', 'возик', 'возка', 'возня', 'возок', 'война', 'вокал', 'волан', 'волга', 'волна', 'волок', 'волос', 'волох', 'волхв', 'вольт', 'вопль', 'ворог', 'ворон', 'ворот', 'ворох', 'ворье', 'вотум', 'вотяк', 'вошка', 'вояка', 'впуск', 'враки', 'враль', 'врата', 'время', 'вруша', 'всход', 'втора', 'вуаль', 'вчера', 'выбег', 'выбой', 'выбор', 'вывал', 'вывес', 'вывих', 'вывод', 'вывоз', 'выгар', 'выгиб', 'выгон', 'выгул', 'выдел', 'выдох', 'выдра', 'выдув', 'выезд', 'выжиг', 'выжим', 'вызов', 'вызол', 'выкат', 'выкол', 'выкос', 'выкуп', 'выкус', 'вылаз', 'вылет', 'вылов', 'вылом', 'вымах', 'вымол', 'вымор', 'вынос', 'выпад', 'выпал', 'выпар', 'выпас', 'выпек', 'выпор', 'выпот', 'вырез', 'выруб', 'высев', 'вытье', 'выход', 'вычет', 'вышаг', 'вышка', 'вьюга', 'вязка', 'вязок', 'вятич', 'вятка', 'гавот', 'гагат', 'гадес', 'газок', 'газон', 'гайка', 'галит', 'галка', 'галоп', 'галун', 'гамак', 'гамба', 'гамма', 'гамон', 'ганаш', 'ганец', 'ганза', 'ганка', 'гараж', 'гарда', 'гарем', 'гарус', 'гаусс', 'гаучо', 'гачек', 'гашиш', 'гвалт', 'гевея', 'гейша', 'гелий', 'гемин', 'гемма', 'гений', 'геном', 'генри', 'геоид', 'герлс', 'герма', 'герой', 'гетит', 'гетра', 'гетто', 'гжель', 'гибка', 'гидра', 'гиена', 'гилея', 'гиляк', 'гинея', 'гипюр', 'гирло', 'гитан', 'гитов', 'гичка', 'глава', 'главк', 'гладь', 'глень', 'глина', 'глинт', 'глипт', 'глист', 'глубь', 'глушь', 'глыба', 'глясе', 'гмина', 'гнейс', 'гнида', 'гниль', 'гнусь', 'гобой', 'говно', 'говор', 'гогот', 'годик', 'годок', 'голем', 'голец', 'голик', 'голод', 'голос', 'голый', 'голая', 'голые', 'голыш', 'гольд', 'голье', 'гольф', 'голяк', 'гомон', 'гонец', 'гонит', 'гонка', 'гонор', 'гопак', 'горал', 'горец', 'горец', 'горжа', 'горка', 'горло', 'горно', 'город', 'горох', 'горст', 'горюн', 'гость', 'граве', 'грамм', 'гранд', 'грант', 'грань', 'гребь', 'грежа', 'греза', 'грена', 'греча', 'грива', 'гридь', 'гриль', 'грипп', 'гроза', 'гросс', 'груда', 'грудь', 'грунт', 'груша', 'грыжа', 'гряда', 'грязь', 'гуава', 'гуано', 'гуашь', 'губан', 'губка', 'гугня', 'гудок', 'гужик', 'гузка', 'гузно', 'гулаг', 'гуляш', 'гумма', 'гумно', 'гумус', 'гуран', 'гурда', 'гурия', 'гусак', 'гусар', 'гусек', 'гусит', 'гусли', 'гуцул', 'гэпэу', 'гюрза', 'давка', 'дадан', 'дайна', 'дайра', 'далия', 'дамба', 'дамка', 'датив', 'дацан', 'дачка', 'дверь', 'дебай', 'дебет', 'дебил', 'дебит', 'дебош', 'дебрь', 'дебют', 'девиз', 'девка', 'девон', 'дегти', 'дедка', 'дедок', 'дежка', 'деизм', 'деист', 'декан', 'декор', 'дележ', 'делец', 'демон', 'демос', 'денди', 'денек', 'денье', 'дерба', 'дерби', 'дерен', 'дерма', 'дерть', 'десна', 'десть', 'детва', 'детка', 'дефис', 'джига', 'джинн', 'дзета', 'дзюдо', 'диана', 'диван', 'диета', 'дикий', 'дикая', 'дикие', 'дилен', 'дилер', 'дильс', 'динар', 'динас', 'динги', 'динод', 'диско', 'дихта', 'дичок', 'длань', 'длина', 'днище', 'донья', 'добор', 'добро', 'довод', 'догма', 'дождь', 'дожим', 'дозор', 'дойка', 'дойна', 'дойра', 'докер', 'домек', 'домен', 'домер', 'домик', 'домна', 'домок', 'домра', 'донец', 'донка', 'донна', 'донор', 'донос', 'донце', 'донья', 'дорка', 'досев', 'доска', 'досол', 'досуг', 'досыл', 'досье', 'дофин', 'доход', 'дочка', 'дошка', 'драга', 'драже', 'драйв', 'драка', 'драма', 'дрань', 'древо', 'дрейф', 'дрель', 'дрема', 'дробь', 'дрова', 'дрога', 'дрожь', 'дрозд', 'дрофа', 'друид', 'дрязг', 'дрянь', 'дубец', 'дубка', 'дубль', 'дубок', 'дубье', 'дувал', 'дуван', 'дудак', 'дудка', 'дудук', 'дужка', 'дукат', 'дулеб', 'думец', 'думка', 'дунец', 'дунит', 'дунст', 'дупло', 'дурак', 'дурни', 'дурка', 'дурра', 'дутар', 'дутик', 'дутыш', 'дутье', 'духан', 'душка', 'душок', 'дуэль', 'дщерь', 'дылда', 'дымка', 'дымок', 'дырка', 'дышло', 'дюбек', 'дюкер', 'дюшес', 'дядек', 'дядья', 'дятел', 'евнух', 'еврей', 'егерь', 'егоза', 'ежиха', 'ежата', 'ездка', 'ездок', 'елина', 'емеля', 'емшан', 'ересь', 'ерник', 'есаул', 'ессей', 'ехида', 'жабка', 'жабра', 'жажда', 'жакан', 'жакет', 'жамка', 'жарка', 'жарок', 'жатва', 'жатка', 'жвало', 'жевок', 'желна', 'желоб', 'желть', 'желчь', 'жених', 'женка', 'жеода', 'жердь', 'жерех', 'жерло', 'жесть', 'жетон', 'живец', 'живое', 'живые', 'живот', 'живье', 'жиган', 'жидок', 'жизнь', 'жилет', 'жилец', 'жилка', 'жилое', 'жилье', 'жинка', 'жираф', 'жирок', 'жиряк', 'жисть', 'житие', 'житье', 'жменя', 'жмудь', 'жнива', 'жница', 'жокей', 'жопка', 'жрица', 'жулан', 'жулик', 'жулье', 'жупан', 'жупел', 'журка', 'жучка', 'жучок', 'забег', 'забой', 'забор', 'завал', 'завет', 'завод', 'завоз', 'завуч', 'загар', 'загиб', 'загон', 'загул', 'задел', 'задик', 'задок', 'задор', 'заеда', 'заезд', 'зажим', 'зажин', 'зажор', 'зазор', 'зазыв', 'заика', 'зайка', 'заказ', 'закал', 'закат', 'закол', 'закон', 'закуп', 'закут', 'залет', 'залец', 'залив', 'зализ', 'залог', 'залом', 'замах', 'замер', 'замес', 'замет', 'замок', 'замок', 'замор', 'замша', 'зандр', 'занос', 'запад', 'запал', 'запас', 'запах', 'запах', 'запев', 'запой', 'запон', 'запор', 'зарез', 'зарин', 'зарод', 'зарок', 'заруб', 'заряд', 'засев', 'засов', 'засол', 'засор', 'засос', 'засыл', 'затек', 'затес', 'затея', 'заток', 'затон', 'затор', 'затяг', 'заумь', 'заход', 'зацеп', 'зачес', 'зачет', 'зачин', 'защип', 'звено', 'звень', 'зверь', 'зебра', 'зевок', 'зелье', 'зельц', 'земец', 'земля', 'зенит', 'зенки', 'зерно', 'зернь', 'зефир', 'зипун', 'злато', 'злоба', 'злюка', 'знамя', 'знать', 'зобик', 'золка', 'зоман', 'зомби', 'зраза', 'зубья', 'зубец', 'зубик', 'зубок', 'зудни', 'зумпф', 'зурна', 'зыбка', 'зыбун', 'зятек', 'зятик', 'иблис', 'иваси', 'ивина', 'ивняк', 'иврит', 'игрек', 'игрец', 'игрок', 'игрун', 'идеал', 'идиом', 'идиот', 'иерей', 'ижица', 'ижора', 'избач', 'извет', 'извив', 'извод', 'извоз', 'изгиб', 'изгой', 'изида', 'излет', 'излом', 'измор', 'износ', 'изыск', 'изюбр', 'икона', 'икота', 'иксия', 'иктус', 'илеус', 'илька', 'имаго', 'имидж', 'имена', 'инвар', 'ингуш', 'индий', 'индол', 'индра', 'индус', 'индюк', 'инжир', 'интим', 'инула', 'иодид', 'иомен', 'иомуд', 'иомут', 'ионит', 'иония', 'иприт', 'ирбис', 'ирида', 'ирмос', 'исида', 'искра', 'искус', 'ислам', 'испод', 'испуг', 'иссоп', 'истец', 'истод', 'исток', 'исход', 'итээр', 'иудей', 'ифрит', 'ишиас', 'йодид', 'йодль', 'йомен', 'кааба', 'кабак', 'кабан', 'кабил', 'кабул', 'кавун', 'кагал', 'каган', 'кагат', 'кагор', 'кадет', 'кадиш', 'кадка', 'кадык', 'казак', 'казан', 'казах', 'казна', 'казнь', 'казус', 'кайен', 'кайла', 'кайма', 'кайра', 'какао', 'калам', 'калан', 'калач', 'калба', 'калий', 'калиф', 'калла', 'калым', 'камас', 'камни', 'камея', 'камин', 'камка', 'камса', 'камус', 'камча', 'камыш', 'канал', 'канат', 'канва', 'канна', 'канон', 'каноэ', 'канун', 'канюк', 'капер', 'капля', 'капор', 'капот', 'каппа', 'капут', 'карат', 'карга', 'карда', 'кариб', 'кария', 'карма', 'карст', 'карта', 'касик', 'каска', 'каско', 'касса', 'каста', 'катар', 'катер', 'катет', 'катод', 'каток', 'катыш', 'кацап', 'кацик', 'качка', 'качок', 'кашли', 'кашка', 'кашне', 'кашпо', 'кашуб', 'кащей', 'каюта', 'квадр', 'квант', 'кварк', 'кварц', 'квача', 'квота', 'кегль', 'кекур', 'кельт', 'келья', 'кенар', 'кенаф', 'кепка', 'кетен', 'кетон', 'кефир', 'кечуа', 'кешью', 'кивер', 'кивок', 'кивот', 'кидас', 'кизил', 'кизяк', 'килим', 'кимвр', 'кинза', 'киник', 'киоск', 'кипер', 'кипка', 'кирза', 'кирка', 'кирха', 'кисет', 'кисея', 'киска', 'киста', 'кисть', 'кифоз', 'кичка', 'кишка', 'клава', 'кладь', 'клака', 'класс', 'клект', 'клерк', 'клест', 'клеть', 'клефт', 'клещи', 'клинч', 'клипс', 'клише', 'клоун', 'клуня', 'клупп', 'клуша', 'клюка', 'клюфт', 'кляча', 'кнель', 'кнехт', 'книга', 'кникс', 'кница', 'князь', 'коала', 'коата', 'кобел', 'кобза', 'кобра', 'кобыз', 'ковач', 'ковер', 'ковка', 'когти', 'кодак', 'кодла', 'кодон', 'кожан', 'кожух', 'кожье', 'козел', 'кознь', 'козон', 'койка', 'койне', 'койот', 'кокет', 'кокни', 'кокон', 'кокор', 'кокос', 'колья', 'колба', 'колер', 'колет', 'колея', 'колик', 'колит', 'колка', 'колли', 'колок', 'колон', 'колос', 'колун', 'колча', 'колье', 'кольт', 'колюр', 'комья', 'комар', 'комли', 'комик', 'комма', 'комми', 'комод', 'комок', 'конек', 'конец', 'коник', 'конка', 'конто', 'конус', 'конюх', 'копал', 'копач', 'копер', 'копие', 'копир', 'копия', 'копка', 'копна', 'копра', 'копун', 'копыл', 'копье', 'коран', 'корни', 'корец', 'кореш', 'корка', 'короб', 'корча', 'корчь', 'корье', 'коряк', 'косач', 'косая', 'косые', 'косец', 'косма', 'косой', 'косые', 'косок', 'кость', 'косье', 'косяк', 'котел', 'котик', 'коток', 'кофей', 'кофий', 'кофта', 'кохия', 'коцит', 'кочан', 'кочни', 'кочет', 'кочка', 'кошер', 'кошка', 'кошма', 'кощей', 'крага', 'кража', 'краля', 'крапп', 'краса', 'кредо', 'креол', 'крепь', 'кресс', 'крест', 'криль', 'крица', 'кроат', 'кровь', 'кроль', 'кросс', 'кроха', 'кроше', 'круиз', 'круть', 'круча', 'кручь', 'крыло', 'крыша', 'кубик', 'кубло', 'кубок', 'кувез', 'кудла', 'кудри', 'кузен', 'кузня', 'кузов', 'кукан', 'кукиш', 'кукла', 'кукша', 'кулаж', 'кулак', 'кулан', 'кулек', 'кулеш', 'кулик', 'кулич', 'кулон', 'культ', 'кумач', 'кумжа', 'кумир', 'кумол', 'кумык', 'кумыс', 'кунак', 'куньи', 'купаж', 'купец', 'купля', 'купол', 'купон', 'кураж', 'курай', 'курва', 'курец', 'курия', 'курка', 'курок', 'куруш', 'курья', 'кусок', 'кутас', 'кутеж', 'кутис', 'куток', 'кутум', 'кутья', 'кутюм', 'кухва', 'кухня', 'кухта', 'кучер', 'кучка', 'кушак', 'кхмер', 'кэтти', 'кювет', 'кюлот', 'кяриз', 'лабаз', 'лабет', 'лаваш', 'лавис', 'лавка', 'лагун', 'ладан', 'ладья', 'лазер', 'лазея', 'лазка', 'лазок', 'лайба', 'лайда', 'лайка', 'лакей', 'лакец', 'лампа', 'ламут', 'ланда', 'ландо', 'ланка', 'лапка', 'лапти', 'лапта', 'лапша', 'ларва', 'ларго', 'ларек', 'ларец', 'ласка', 'лассо', 'латин', 'латка', 'латук', 'латыш', 'лафет', 'лафит', 'лацци', 'лачка', 'лачок', 'лбина', 'лбище', 'левак', 'левит', 'левша', 'левый', 'легат', 'легаш', 'легуа', 'ледок', 'лежак', 'лежни', 'лежка', 'лейка', 'лекаж', 'лемех', 'лемеш', 'лемма', 'лемур', 'ленок', 'лента', 'ленца', 'лепет', 'лепка', 'лепра', 'лепта', 'лерка', 'леска', 'лесок', 'лесть', 'летка', 'леток', 'летун', 'лешак', 'леший', 'лещик', 'лиана', 'либра', 'ливан', 'ливни', 'ливер', 'ливка', 'лидер', 'лизат', 'лизин', 'лизис', 'лизол', 'лизун', 'ликер', 'лилея', 'лилия', 'лиман', 'лимит', 'лимон', 'лимфа', 'линек', 'линек', 'линза', 'линия', 'липец', 'липид', 'липка', 'липси', 'лирик', 'лиска', 'литва', 'литер', 'литий', 'литка', 'литье', 'лихач', 'лихва', 'лицей', 'лишай', 'лишек', 'лобан', 'лобби', 'лобик', 'лобио', 'лобок', 'ловец', 'ловля', 'логик', 'логос', 'лодка', 'ложка', 'ложок', 'локва', 'локон', 'локти', 'ломик', 'ломка', 'ломок', 'ломти', 'лонжа', 'лопух', 'лоток', 'лотос', 'лоция', 'лошак', 'лубья', 'лубок', 'лужок', 'лузга', 'лукно', 'лунит', 'лунка', 'лупин', 'лупка', 'лучик', 'лучок', 'лыжня', 'лысун', 'лысый', 'лытка', 'лычка', 'льяло', 'любка', 'любви', 'любое', 'любой', 'любая', 'любые', 'люгер', 'люмен', 'люнет', 'люпин', 'люпус', 'люрик', 'лютик', 'лютич', 'лютня', 'люффа', 'лючок', 'ля-ля', 'лягва', 'ляжка', 'лямка', 'ляпис', 'лярва', 'ляссе', 'ляшка', 'магик', 'магия', 'магма', 'магот', 'мадам', 'мадия', 'маета', 'мажор', 'мазар', 'мазер', 'мазик', 'мазка', 'мазло', 'мазня', 'мазок', 'мазур', 'мазут', 'майер', 'майка', 'майна', 'майор', 'макао', 'макет', 'макса', 'макси', 'малек', 'малец', 'малик', 'малка', 'малое', 'малый', 'малье', 'маляр', 'мамай', 'маман', 'мамба', 'мамка', 'мамон', 'манас', 'манго', 'манда', 'манеж', 'манер', 'мание', 'мания', 'манка', 'манко', 'манна', 'манок', 'манор', 'манси', 'манто', 'манту', 'манул', 'маори', 'марал', 'маран', 'марго', 'маржа', 'марка', 'марля', 'масаи', 'маска', 'масло', 'масон', 'масса', 'масть', 'матка', 'маток', 'матюг', 'матюк', 'мафия', 'махан', 'махра', 'мачок', 'мачта', 'мегом', 'медея', 'медик', 'медок', 'медяк', 'мезга', 'мезон', 'мейоз', 'мекка', 'мелис', 'мелок', 'мелос', 'менка', 'мерея', 'мерин', 'мерка', 'месса', 'место', 'месть', 'месье', 'месяц', 'метан', 'метек', 'метил', 'метис', 'метка', 'метла', 'метод', 'метол', 'метоп', 'метро', 'меццо', 'мечта', 'мешок', 'мигач', 'мизер', 'микоз', 'микст', 'милка', 'милое', 'милый', 'милая', 'милые', 'мильт', 'мимик', 'минер', 'минея', 'минор', 'минос', 'минус', 'миома', 'мираб', 'мираж', 'мирза', 'мирок', 'мирон', 'миска', 'митоз', 'митра', 'мишка', 'мишук', 'млеко', 'могар', 'могол', 'модем', 'модий', 'модус', 'мойва', 'мойка', 'мойра', 'мокко', 'мокой', 'мокша', 'молва', 'молка', 'молот', 'молох', 'молян', 'моляр', 'момме', 'монах', 'моном', 'мопед', 'морда', 'мороз', 'морок', 'морцо', 'моряк', 'мосол', 'мосье', 'мотет', 'мотив', 'мотка', 'мотня', 'моток', 'мотор', 'мотто', 'мохер', 'мохна', 'мочка', 'мошка', 'мошна', 'муаре', 'мудак', 'мужья', 'мужик', 'музга', 'музей', 'мулат', 'мулек', 'мулла', 'муляж', 'мумие', 'мумия', 'мунгу', 'мураш', 'мурда', 'мурза', 'мурин', 'мурка', 'мурло', 'мурья', 'мусор', 'мутон', 'мутул', 'муфта', 'муцин', 'мучка', 'мушар', 'мушка', 'мымра', 'мысик', 'мысль', 'мысок', 'мытье', 'мычка', 'мышей', 'мышка', 'мышца', 'мэрия', 'мюзет', 'мюрид', 'мякиш', 'мялка', 'мямля', 'мянда', 'мясцо', 'мятеж', 'мятье', 'набат', 'набег', 'набла', 'набоб', 'набор', 'навал', 'навар', 'навес', 'навет', 'навис', 'навоз', 'навой', 'навык', 'наган', 'нагар', 'нагиб', 'нагон', 'нагул', 'надел', 'надир', 'надой', 'надув', 'наезд', 'нажиг', 'нажим', 'нажин', 'назем', 'наказ', 'накал', 'накат', 'накол', 'накос', 'накра', 'налеп', 'налет', 'налив', 'налим', 'налог', 'налой', 'намаз', 'намек', 'намет', 'намин', 'намол', 'намыв', 'нанай', 'нанду', 'нанка', 'нанос', 'напев', 'напой', 'напор', 'нарез', 'народ', 'нарта', 'наруч', 'наряд', 'насад', 'насос', 'насып', 'натек', 'натес', 'натяг', 'наука', 'нафта', 'нахал', 'наход', 'нация', 'начес', 'начет', 'начин', 'наяда', 'невер', 'невма', 'невод', 'негус', 'недра', 'недуг', 'немец', 'немка', 'немой', 'немая', 'немые', 'ненец', 'нения', 'ненка', 'непер', 'нерка', 'нерол', 'нерпа', 'несун', 'нетяг', 'нефть', 'нечет', 'нивка', 'нивоз', 'нивух', 'низка', 'низок', 'никса', 'никто', 'нилот', 'нимфа', 'нисан', 'нитка', 'нитон', 'ничто', 'ничья', 'нищий', 'нищая', 'нищие', 'новик', 'новое', 'ногай', 'ногти', 'ножик', 'ножка', 'нойон', 'нолик', 'номад', 'номер', 'нонет', 'нория', 'норка', 'норма', 'норов', 'носач', 'носик', 'носка', 'носок', 'нотис', 'нотка', 'ночва', 'ночка', 'нудга', 'нужда', 'нукер', 'нулик', 'нутро', 'нырец', 'нырок', 'нытик', 'нытье', 'нычка', 'нюанс', 'оазис', 'обвал', 'обвес', 'обвод', 'обвоз', 'обгон', 'обдел', 'обдир', 'обдув', 'обжиг', 'обжим', 'обжин', 'обжог', 'обзор', 'обида', 'обкат', 'обком', 'облет', 'облик', 'облов', 'облог', 'облой', 'обман', 'обмен', 'обмер', 'обмет', 'обмин', 'обмол', 'обмыв', 'обнос', 'образ', 'обрат', 'обрез', 'оброк', 'обруб', 'обруч', 'обрыв', 'обряд', 'обсев', 'обувь', 'обуза', 'обход', 'общак', 'общее', 'обыск', 'овраг', 'овсец', 'овсюг', 'овчар', 'огонь', 'огрех', 'одежа', 'одеон', 'одурь', 'ожина', 'озеро', 'озимь', 'озноб', 'оидий', 'ойрот', 'окапи', 'океан', 'окись', 'окиян', 'оклад', 'оклик', 'окоем', 'окорм', 'окрас', 'окрик', 'окрол', 'округ', 'оксид', 'октан', 'октет', 'окунь', 'олеин', 'олень', 'олеум', 'олива', 'олимп', 'олифа', 'олово', 'ольха', 'омела', 'омлет', 'омуль', 'онагр', 'оникс', 'онуча', 'оолит', 'ооцит', 'опара', 'опека', 'опята', 'опера', 'опись', 'опиум', 'оплот', 'оплыв', 'опоек', 'опока', 'опрос', 'оптик', 'орава', 'орала', 'орарь', 'орган', 'оргия', 'орден', 'ордер', 'ореол', 'оржад', 'орион', 'оркан', 'орлан', 'орлец', 'орлик', 'орляк', 'ортит', 'орфей', 'орхит', 'оршад', 'осада', 'осень', 'осетр', 'осина', 'оскал', 'ослик', 'ослоп', 'осляк', 'осман', 'осмий', 'осмол', 'осмос', 'особа', 'особь', 'осоед', 'осока', 'осташ', 'остит', 'остов', 'остол', 'остюк', 'остяк', 'осыпь', 'отава', 'отара', 'отбив', 'отбой', 'отбор', 'отвал', 'отвар', 'отвес', 'ответ', 'отвод', 'отвоз', 'отгиб', 'отгон', 'отгул', 'отдел', 'отдух', 'отдых', 'отель', 'отжиг', 'отжим', 'отзол', 'отзыв', 'отказ', 'откат', 'откол', 'откос', 'откуп', 'откус', 'отлет', 'отлив', 'отлов', 'отлог', 'отлуп', 'отмах', 'отмер', 'отмол', 'относ', 'отпад', 'отпал', 'отпор', 'отрез', 'отрог', 'отрок', 'отруб', 'отрыв', 'отряд', 'отсев', 'отсек', 'отсос', 'оттек', 'отток', 'отход', 'отцеп', 'отчал', 'отчет', 'отчим', 'отшиб', 'офорт', 'офсет', 'оффис', 'охват', 'охота', 'очерк', 'очкур', 'очник', 'ошеек', 'ошкуй', 'ощупь', 'пагон', 'падеж', 'падеж', 'падла', 'падог', 'падуб', 'падун', 'пазок', 'пайва', 'пайза', 'пайка', 'пайол', 'пакет', 'пакля', 'палас', 'палац', 'палач', 'палаш', 'палех', 'палец', 'палея', 'палия', 'палка', 'палуб', 'пампа', 'панаш', 'панда', 'панер', 'панна', 'паныч', 'панье', 'папах', 'папеж', 'папка', 'парад', 'параф', 'парез', 'парни', 'парик', 'пария', 'парня', 'парод', 'парок', 'паром', 'парта', 'парун', 'парус', 'парча', 'парша', 'пасма', 'паста', 'пасть', 'пасха', 'пасюк', 'патан', 'патер', 'патио', 'патуа', 'пауза', 'пафос', 'пахви', 'пахит', 'пахта', 'пацан', 'пачка', 'пашня', 'паяло', 'певни', 'певец', 'певун', 'пегас', 'пейот', 'пекан', 'пекло', 'пелит', 'пемза', 'пенал', 'пенге', 'пенек', 'пение', 'пенка', 'пенни', 'пенье', 'пепел', 'пепси', 'перга', 'перед', 'перец', 'перка', 'перло', 'перья', 'перси', 'перст', 'перун', 'перье', 'песец', 'песик', 'песнь', 'петел', 'петит', 'петля', 'петух', 'печка', 'пешец', 'пеший', 'пешая', 'пешие', 'пешка', 'пешня', 'пещер', 'пещур', 'пиала', 'пиано', 'пивко', 'пивцо', 'пигус', 'пижма', 'пижон', 'пизда', 'пикан', 'пикап', 'пикет', 'пикон', 'пикша', 'пилав', 'пилат', 'пилка', 'пилон', 'пилот', 'пимок', 'пиния', 'пинка', 'пинна', 'пинок', 'пинта', 'пипка', 'пират', 'пирит', 'пирке', 'пирог', 'пирок', 'пирон', 'пироп', 'писец', 'писун', 'питие', 'питок', 'питон', 'питух', 'питье', 'пифия', 'пифос', 'пихта', 'пицца', 'пищик', 'плавь', 'плаке', 'пламя', 'пласт', 'плато', 'плаун', 'плаха', 'плебс', 'плева', 'плеер', 'племя', 'плеск', 'плесо', 'плеть', 'плечо', 'плешь', 'плинт', 'плита', 'плица', 'плоть', 'плохо', 'плюха', 'пнище', 'побег', 'побои', 'побор', 'повал', 'повар', 'повет', 'повод', 'повод', 'повой', 'погиб', 'погон', 'подий', 'подог', 'подой', 'подол', 'поедь', 'поезд', 'пожар', 'пожня', 'пожог', 'позем', 'позер', 'позор', 'позыв', 'позык', 'поиск', 'пойка', 'пойло', 'пойма', 'показ', 'покат', 'покер', 'покой', 'покос', 'покус', 'полба', 'полет', 'полив', 'полип', 'полир', 'полис', 'полог', 'полоз', 'полой', 'полом', 'полон', 'полть', 'полюс', 'поляк', 'поляш', 'помет', 'помин', 'помои', 'помол', 'помор', 'помпа', 'понос', 'пончо', 'понюх', 'попас', 'попик', 'попка', 'попса', 'порез', 'порей', 'порка', 'порог', 'пороз', 'порок', 'порос', 'порох', 'порск', 'порто', 'поруб', 'порча', 'порыв', 'посад', 'посев', 'посол', 'посол', 'посох', 'посул', 'посыл', 'поташ', 'потек', 'потир', 'поток', 'потоп', 'потяг', 'поход', 'похул', 'почва', 'почет', 'почин', 'почка', 'почта', 'пошиб', 'пошив', 'поэма', 'право', 'прана', 'прель', 'пресс', 'приап', 'прием', 'прима', 'принц', 'приор', 'приуз', 'причт', 'приют', 'проба', 'проем', 'проза', 'пропс', 'просо', 'проух', 'профи', 'прусс', 'прыск', 'прыть', 'прядь', 'пряжа', 'пряха', 'псарь', 'псина', 'псица', 'псише', 'птаха', 'птица', 'пуант', 'пугач', 'пудик', 'пудра', 'пузан', 'пузач', 'пукля', 'пульс', 'пульт', 'пунец', 'пункт', 'пупок', 'пурга', 'пурин', 'пурка', 'пусто', 'путец', 'путик', 'путло', 'пуфик', 'пучка', 'пучок', 'пушка', 'пушок', 'пушта', 'пчела', 'пшено', 'пырей', 'пытка', 'пышка', 'пьеза', 'пьеро', 'пьеса', 'пьянь', 'пэтэу', 'пялка', 'пясть', 'пятак', 'пятка', 'пятно', 'пяток', 'пятый', 'пятая', 'пятые', 'рабат', 'раджа', 'радий', 'радио', 'радон', 'разик', 'разок', 'разор', 'разум', 'раина', 'район', 'ракия', 'ракля', 'ракун', 'ракша', 'ралли', 'рамка', 'рампа', 'ранет', 'ранец', 'ранка', 'ранчо', 'рапид', 'растр', 'ратай', 'ратин', 'раунд', 'рафид', 'рафик', 'рафия', 'рахис', 'рахит', 'рацея', 'рация', 'рачок', 'рвань', 'рвота', 'рдест', 'ребаб', 'ребро', 'ребус', 'ревун', 'регби', 'регия', 'редан', 'редис', 'редут', 'режим', 'резак', 'резец', 'резит', 'резка', 'резня', 'резол', 'резон', 'резус', 'рейка', 'релиз', 'релит', 'рельс', 'ремез', 'ремни', 'ремиз', 'ренет', 'рений', 'рента', 'репей', 'репьи', 'репер', 'репка', 'репье', 'ретро', 'речка', 'решка', 'ржавь', 'ржица', 'ржище', 'риель', 'ризка', 'рикша', 'ринит', 'рипус', 'ритор', 'рифей', 'рифля', 'рифма', 'рицин', 'ришта', 'робот', 'ровер', 'ровик', 'ровня', 'рогач', 'рогоз', 'родео', 'родий', 'родич', 'родня', 'рожак', 'рожок', 'рожон', 'розан', 'розга', 'рознь', 'ройба', 'ройка', 'рокот', 'ролик', 'роман', 'ромец', 'ромок', 'ромша', 'рондо', 'ронжа', 'ропак', 'ропот', 'ростр', 'ротик', 'роток', 'ротон', 'ротор', 'рохля', 'рояль', 'ртище', 'ртуть', 'рубеж', 'рубец', 'рубин', 'рубка', 'рубль', 'ругня', 'рудяк', 'ружье', 'руина', 'рукав', 'рулет', 'рулон', 'румын', 'рунец', 'рупия', 'рупор', 'русак', 'русин', 'русло', 'рутил', 'ручей', 'ручьи', 'ручка', 'рыбак', 'рыбец', 'рыбка', 'рывок', 'рыжак', 'рыжей', 'рыжий', 'рында', 'рынок', 'рысак', 'рысца', 'рытье', 'рычаг', 'рэкет', 'рэлей', 'рюмка', 'рюшка', 'рябец', 'рябик', 'рябой', 'рябая', 'рябые', 'рябок', 'рядно', 'рядок', 'ряска', 'рясна', 'ряшка', 'сабан', 'сабей', 'сабза', 'сабин', 'сабля', 'сабур', 'саван', 'савар', 'савка', 'саган', 'сагиб', 'саджа', 'садик', 'садка', 'садно', 'садок', 'сазан', 'сайга', 'сайда', 'сайка', 'сайра', 'саква', 'сакля', 'салар', 'салат', 'салеп', 'салка', 'салма', 'салол', 'салон', 'салоп', 'салют', 'саман', 'самба', 'самбо', 'самец', 'самка', 'самум', 'санки', 'сапер', 'сапка', 'сапог', 'сапун', 'сарай', 'саржа', 'сарос', 'сарыч', 'сатин', 'сатир', 'сауна', 'сафра', 'сахар', 'сахиб', 'сачок', 'сброд', 'сброс', 'сбруя', 'свара', 'сваха', 'свеча', 'свиль', 'свинг', 'свист', 'свита', 'свора', 'свояк', 'связа', 'связь', 'сглаз', 'сдача', 'сдвиг', 'сдоба', 'сеанс', 'севак', 'севба', 'север', 'севец', 'севок', 'седан', 'седло', 'седок', 'сеево', 'сезам', 'сезни', 'сезон', 'сейба', 'сейид', 'сейша', 'секач', 'секта', 'селен', 'селин', 'семга', 'семик', 'семит', 'семья', 'сенаж', 'сенат', 'сенки', 'сенцо', 'сепия', 'серир', 'серия', 'серка', 'серна', 'серое', 'серсо', 'серум', 'серый', 'серая', 'серые', 'сетка', 'сеунч', 'сечка', 'сиаль', 'сивер', 'сивка', 'сивко', 'сивуч', 'сивый', 'сивая', 'сивые', 'сигма', 'сидни', 'сидка', 'сидор', 'сиена', 'сижок', 'сизиф', 'сизяк', 'сикоз', 'силач', 'силен', 'силка', 'силок', 'силон', 'силос', 'силур', 'сильф', 'симка', 'синап', 'синец', 'синод', 'синто', 'синус', 'синяк', 'синяя', 'синие', 'сипай', 'сирен', 'сирин', 'сироп', 'сирый', 'сирая', 'сирые', 'систр', 'ситар', 'ситец', 'ситро', 'ситце', 'сифон', 'скала', 'скало', 'скань', 'скарб', 'скарн', 'скаут', 'скачь', 'сквер', 'сквош', 'скейт', 'скена', 'скепт', 'скетч', 'скирд', 'склад', 'склеп', 'склиз', 'склон', 'скоба', 'скора', 'скорм', 'скотч', 'скрап', 'скреп', 'скрип', 'скрэб', 'скуди', 'скудо', 'скука', 'скула', 'скунс', 'слава', 'слайд', 'слань', 'слега', 'слеза', 'сленг', 'слизь', 'слово', 'слуга', 'слуда', 'слука', 'слюда', 'слюна', 'смазь', 'смена', 'смерд', 'смерч', 'смесь', 'смета', 'смола', 'смоль', 'смотр', 'смрад', 'смута', 'смуть', 'смысл', 'снедь', 'сноха', 'сныть', 'собес', 'собор', 'совет', 'совик', 'совка', 'совок', 'согра', 'содом', 'созыв', 'сойка', 'сойма', 'сойот', 'сокол', 'солея', 'солка', 'солод', 'соляр', 'сомик', 'сомье', 'сонет', 'сопка', 'сопло', 'сопля', 'сопор', 'сопун', 'сорго', 'сорит', 'сорок', 'сором', 'сорус', 'сосед', 'сосец', 'соска', 'сосна', 'сосок', 'сосуд', 'сосун', 'сотка', 'сотня', 'сотый', 'сотая', 'софит', 'сохач', 'сочни', 'сочок', 'сошка', 'спаги', 'спазм', 'спайк', 'спесь', 'спирт', 'спица', 'сплав', 'сплав', 'сплин', 'спорт', 'спрей', 'спрос', 'спрут', 'спурт', 'спуск', 'среда', 'срост', 'ссора', 'ссуда', 'стадо', 'сталь', 'станс', 'старт', 'старь', 'стать', 'ствол', 'створ', 'стега', 'стезя', 'стела', 'стель', 'стенд', 'стень', 'степс', 'степь', 'стерх', 'стикс', 'стило', 'стиль', 'стоик', 'стокс', 'столп', 'стопа', 'стояк', 'страж', 'страз', 'страх', 'стриж', 'стрик', 'стрит', 'строй', 'строп', 'струг', 'струп', 'струя', 'стужа', 'ступа', 'ступь', 'стыдь', 'стынь', 'суаре', 'сувой', 'судак', 'судия', 'судно', 'судно', 'судок', 'судья', 'суета', 'суинг', 'сучья', 'сукно', 'сукре', 'сулея', 'сулой', 'сумах', 'сумет', 'сумка', 'сумма', 'сунна', 'супер', 'супец', 'супин', 'суржа', 'сурик', 'сурна', 'сурок', 'сусак', 'сусек', 'сусло', 'сутаж', 'сутки', 'сутра', 'суфле', 'сучка', 'сучок', 'сучок', 'сучье', 'сушка', 'сущее', 'сущик', 'сфера', 'схема', 'схима', 'сцена', 'сцинк', 'сынок', 'сыпец', 'сырец', 'сырок', 'сырца', 'сырье', 'сытый', 'сытая', 'сытые', 'сычуг', 'сыщик', 'сэшэа', 'сюжет', 'сюита', 'сябер', 'сяжок', 'табак', 'табес', 'табло', 'табор', 'табун', 'тавот', 'тавро', 'таган', 'тазик', 'тайга', 'таймс', 'тайна', 'такое', 'такса', 'такси', 'такыр', 'талан', 'талер', 'талес', 'талиб', 'талик', 'талия', 'талон', 'талыш', 'тальк', 'талья', 'тамга', 'тамил', 'танго', 'танец', 'танин', 'танок', 'тапер', 'тапир', 'тапка', 'таран', 'тараф', 'тариф', 'тарын', 'таска', 'татка', 'тауэр', 'тафта', 'тафья', 'тахта', 'тацет', 'тачка', 'ташка', 'таэль', 'тварь', 'твист', 'театр', 'тезей', 'тезис', 'тезка', 'теизм', 'теист', 'текст', 'телек', 'телец', 'телик', 'телка', 'телок', 'тембр', 'темка', 'тенге', 'тенек', 'тенор', 'тепло', 'терем', 'терец', 'терка', 'терма', 'терно', 'тесак', 'тесей', 'теска', 'тесло', 'тесто', 'тесть', 'тетка', 'теург', 'течка', 'тешка', 'тиара', 'тигли', 'тимол', 'тимус', 'тинка', 'типаж', 'типец', 'типик', 'типун', 'тираж', 'тиран', 'тиски', 'титан', 'титла', 'титул', 'тифон', 'тифус', 'ткань', 'тлень', 'товар', 'тодес', 'тойон', 'токай', 'толай', 'толос', 'толпа', 'толща', 'толщь', 'томан', 'томат', 'томик', 'томми', 'тондо', 'тоник', 'тонна', 'тонус', 'топаз', 'топик', 'топка', 'топор', 'топот', 'торба', 'торец', 'торий', 'торос', 'тоска', 'тотем', 'тоуэр', 'тохар', 'точка', 'трава', 'трамп', 'транс', 'транш', 'трапп', 'трата', 'траур', 'треба', 'трель', 'трема', 'треск', 'трест', 'треть', 'треух', 'триас', 'триба', 'триер', 'тризм', 'трико', 'трипс', 'тромб', 'тромп', 'трояк', 'труба', 'труха', 'трюмо', 'тсуга', 'туаль', 'тубус', 'тугай', 'тугун', 'тузик', 'тукан', 'тулес', 'тулий', 'тулуз', 'тулук', 'тулун', 'тулуп', 'тулья', 'туляк', 'тумак', 'туман', 'тумба', 'тумор', 'тунец', 'тупей', 'тупец', 'тупик', 'тупыш', 'турач', 'турка', 'турне', 'турок', 'тутор', 'тутти', 'туфля', 'туфта', 'тучка', 'тушка', 'тщета', 'тыква', 'тынок', 'тырло', 'тырса', 'тычок', 'тюбик', 'тюник', 'тюрбе', 'тюрик', 'тюрок', 'тютюн', 'тюфяк', 'тючок', 'тябло', 'тягач', 'тягло', 'тяжба', 'тяпка', 'уазик', 'уброд', 'убрус', 'убыль', 'увраж', 'углич', 'угода', 'уголь', 'угорь', 'угрев', 'удаль', 'удача', 'удерж', 'удило', 'удэге', 'удэхе', 'ужата', 'узанс', 'узбек', 'уздца', 'узина', 'узник', 'уйгур', 'уклад', 'уклея', 'уклон', 'укроп', 'укрут', 'укрюк', 'уксус', 'улика', 'улица', 'улыба', 'ульта', 'умбра', 'умище', 'умник', 'умный', 'умная', 'умные', 'умолк', 'униат', 'унион', 'унтер', 'унция', 'упрек', 'упырь', 'ураза', 'урарт', 'урема', 'урина', 'урман', 'усина', 'усище', 'ускок', 'успех', 'устой', 'уступ', 'устье', 'утеря', 'утеха', 'утиль', 'утица', 'ухарь', 'ухват', 'ухожь', 'ухряб', 'учеба', 'учхоз', 'ушица', 'ушкуй', 'ушник', 'ущерб', 'фабра', 'фавор', 'фавус', 'фагот', 'фадом', 'фазан', 'фазис', 'факел', 'факир', 'фалда', 'фальц', 'фанат', 'фанза', 'фарад', 'фарси', 'фасад', 'фасет', 'фаска', 'фасон', 'фатом', 'фатум', 'фатюй', 'фауна', 'фацет', 'фация', 'фаянс', 'фелло', 'фелон', 'фений', 'фенил', 'фенол', 'ферзь', 'ферма', 'ферми', 'феска', 'фетва', 'фетиш', 'фетюк', 'фефер', 'фиакр', 'фибра', 'фигли', 'фигня', 'фидер', 'фижма', 'физик', 'физия', 'фикус', 'филер', 'филин', 'филон', 'филум', 'фильм', 'фильц', 'фимоз', 'финал', 'финик', 'финиш', 'финка', 'фиорд', 'фирма', 'фитин', 'фишка', 'фланг', 'фланк', 'флейт', 'флейц', 'флинт', 'флирт', 'флокс', 'флора', 'флюид', 'фляга', 'фляер', 'фобия', 'фокус', 'фолио', 'фолия', 'фомка', 'фонон', 'форма', 'форум', 'фоска', 'фотон', 'фофан', 'фраер', 'фраза', 'франк', 'франт', 'фрахт', 'фреза', 'френч', 'фреон', 'фронт', 'фрукт', 'фрунт', 'фугас', 'фужер', 'фузея', 'фузия', 'фукус', 'фуляр', 'фураж', 'фуран', 'фурия', 'фурма', 'фурор', 'футер', 'футор', 'фуфло', 'фуэте', 'фырок', 'фьорд', 'фюрер', 'хабар', 'хадис', 'хазар', 'хайло', 'хакас', 'хакер', 'халал', 'халат', 'халва', 'халда', 'халиф', 'хамит', 'хамка', 'хамло', 'хамса', 'хамье', 'ханжа', 'ханша', 'хапун', 'харон', 'харчо', 'хасид', 'хатка', 'хашиш', 'хвала', 'хворь', 'хвост', 'хедер', 'хедив', 'херем', 'херик', 'хи-хи', 'хиазм', 'хилус', 'хилый', 'хилая', 'хилые', 'хиляк', 'химик', 'химия', 'химус', 'хинди', 'хинин', 'хинон', 'хиппи', 'хирот', 'хитин', 'хитон', 'хлест', 'хлыст', 'хлюст', 'хлябь', 'хмара', 'хмель', 'хмурь', 'хмырь', 'хоана', 'хобби', 'хобот', 'ходни', 'ходжа', 'ходик', 'ходка', 'ходок', 'ходок', 'ходун', 'холин', 'холка', 'холод', 'холоп', 'холст', 'холуй', 'хольд', 'хомут', 'хомяк', 'хорал', 'хорда', 'хорей', 'хорея', 'хохма', 'хохол', 'хохот', 'хошун', 'хруст', 'хряпа', 'хряск', 'хряст', 'худое', 'хунну', 'хунта', 'хурал', 'хурда', 'хурма', 'хутор', 'цадик', 'цанга', 'цапка', 'цапля', 'цапун', 'цапфа', 'царек', 'цацка', 'цвель', 'цевка', 'цевье', 'цедра', 'цезий', 'целик', 'целла', 'целое', 'центр', 'ценур', 'цепни', 'цепка', 'цепня', 'церий', 'цефей', 'цибик', 'цикля', 'цинаш', 'цинга', 'циник', 'цирик', 'циста', 'цитра', 'цифра', 'цокот', 'цукат', 'цуцик', 'цыбик', 'цыган', 'цыпка', 'цэрэу', 'чабан', 'чабер', 'чадра', 'чайка', 'чакан', 'чакра', 'чалка', 'чалма', 'чалый', 'чалая', 'чалые', 'чарка', 'часик', 'часок', 'часть', 'чашка', 'чебак', 'чебот', 'челка', 'чемер', 'чепан', 'черва', 'черви', 'червь', 'черед', 'через', 'черен', 'череп', 'чернь', 'ческа', 'честь', 'четка', 'чехол', 'чечен', 'чечет', 'чешка', 'чешуя', 'чибис', 'чилим', 'чинка', 'чирей', 'чирьи', 'чирик', 'чирок', 'чирус', 'чиряк', 'число', 'читка', 'чомга', 'чомпи', 'чрево', 'чреда', 'чтиво', 'чтица', 'чубик', 'чубук', 'чувак', 'чувал', 'чуваш', 'чувяк', 'чугун', 'чудак', 'чудик', 'чужак', 'чужое', 'чужая', 'чужие', 'чуйка', 'чукча', 'чулан', 'чулок', 'чумак', 'чурек', 'чурка', 'чутье', 'чухна', 'чушка', 'шабат', 'шабаш', 'шабер', 'шабер', 'шабли', 'шабля', 'шабот', 'шабур', 'шавка', 'шадуф', 'шажок', 'шайба', 'шайка', 'шакал', 'шалаш', 'шалон', 'шалун', 'шаман', 'шамот', 'шанец', 'шанкр', 'шапка', 'шарап', 'шарик', 'шасла', 'шассе', 'шатен', 'шатер', 'шатия', 'шатун', 'шафер', 'шахта', 'шашни', 'шашка', 'шашни', 'шваль', 'шванк', 'швара', 'шварт', 'шверт', 'шевер', 'шевро', 'шеища', 'шелеп', 'шелом', 'шельф', 'шемая', 'шепот', 'шериф', 'шибер', 'шизик', 'шиизм', 'шилья', 'шимми', 'шинок', 'шинто', 'шипок', 'шипун', 'ширма', 'шитво', 'шитик', 'шитье', 'шифер', 'шифон', 'шихан', 'шихта', 'шишак', 'шишка', 'шкала', 'шкант', 'шквал', 'шкерт', 'шкода', 'школа', 'шкура', 'шланг', 'шлейф', 'шлюха', 'шляпа', 'шмель', 'шмоль', 'шнапс', 'шнява', 'шняка', 'шобла', 'шорец', 'шорка', 'шорня', 'шорох', 'шоссе', 'шофер', 'шпага', 'шпала', 'шпана', 'шпень', 'шпиль', 'шпинь', 'шпион', 'шприц', 'шпрот', 'шпуля', 'шпунт', 'шпынь', 'шримс', 'шрифт', 'штамб', 'штамм', 'штамп', 'штейн', 'штиль', 'штифт', 'штора', 'шторм', 'штраб', 'штраф', 'штрек', 'штрих', 'штука', 'штурм', 'штыка', 'штырь', 'шубка', 'шугай', 'шудра', 'шуйца', 'шулер', 'шумер', 'шумок', 'шурин', 'шурпа', 'шуруп', 'шуряк', 'шутка', 'шухер', 'шушун', 'шхера', 'шхуна', 'шютте', 'щебни', 'щебет', 'щегол', 'щекот', 'щелок', 'щенок', 'щепка', 'щепье', 'щерба', 'щетка', 'щечка', 'щипец', 'щипка', 'щипок', 'щитни', 'щитик', 'щиток', 'щишки', 'щупик', 'щупка', 'щурка', 'щурок', 'щучка', 'эгида', 'эгрет', 'эдикт', 'эйдос', 'экзот', 'эклер', 'экран', 'эксод', 'элеат', 'элита', 'эллин', 'эмаль', 'эммер', 'энзим', 'эозин', 'эолит', 'эоцен', 'эпарх', 'эпонж', 'эпоха', 'эрата', 'эрбий', 'эрзац', 'эркер', 'эсдек', 'эскер', 'эскиз', 'эспри', 'эссен', 'эстет', 'этвеш', 'этика', 'этнос', 'эфиоп', 'юдоль', 'южане', 'юзист', 'юкола', 'юниор', 'юница', 'юнкер', 'юнкор', 'юннат', 'юнона', 'юноша', 'юрист', 'юферс', 'ябеда', 'ягель', 'ягода', 'ягуар', 'яичко', 'якорь', 'ямина', 'ямища', 'ямщик', 'ярица', 'ярлык', 'яруга', 'ярыга', 'ясень', 'яство', 'ястык', 'ясырь', 'ятвяг', 'ятовь', 'яхонт'],\n    };\n  },\n  computed: {\n    secretWord: function () {\n      return this.dictionary[Math.floor(Math.random() * this.dictionary.length)];\n    }\n  },\n  created() {\n    window.addEventListener('keydown', (e) => {\n      this.catchKeyPress(e.key);\n    });\n  },\n  methods: {\n    catchKeyPress(key) {\n      let lowerKey = key.toLowerCase();\n      if (this.disabledLetters[lowerKey]) {\n        this.$refs['keyboard'].alertLetter(lowerKey);\n        return;\n      }\n      this.$refs[this.setRef(this.currentAttempt)][0].printLetter(key);\n      if (key === 'Enter' && this.filledWord) {\n        this.checkWord();\n      }\n    },\n    startNewGame() {\n      this.currentAttempt = 1;\n      this.filledWord = this.youWin = this.youLoose = this.wordNotExist = false;\n      this.attempts = Array(this.numberOfAttempts).fill('');\n      for (let i = 1; i <= this.numberOfAttempts; i++) {\n        this.$refs[this.setRef(i)][0].clear();\n      }\n    },\n    getClass(key) {\n      if (key < this.currentAttempt) return 'previous-attempt';\n      if (key === this.currentAttempt) return 'current-attempt';\n      if (key > this.currentAttempt) return 'next-attempt';\n    },\n    setRef(key) {\n      return 'attempt_' + key;\n    },\n    keyPress(key) {\n      this.catchKeyPress(key);\n    },\n    filledWordParse(status, word) {\n      this.filledWord = status;\n      if (this.filledWord) {\n        this.attempts[this.currentAttempt - 1] = word.join('').toLowerCase();\n      }\n    },\n    checkWord() {\n      this.filledWord = false;\n      let attempt = this.attempts[this.currentAttempt - 1];\n      if (!this.dictionary.includes(attempt)) {\n        this.wordNotExist = true;\n        window.setTimeout(() => { this.wordNotExist = false }, 1000);\n        return;\n      }\n      this.fillBlacklistLetters(attempt);\n      if (attempt === this.secretWord.toLowerCase()) {\n        this.youWin = true;\n      }\n      if (attempt !== this.secretWord.toLowerCase() && this.currentAttempt === parseInt(this.numberOfAttempts)) {\n        this.youLoose = true;\n      } else {\n        this.currentAttempt++;\n      }\n    },\n    fillBlacklistLetters(word) {\n      let letters = word.split('');\n      letters.forEach(it => {\n        if (!this.secretWord.includes(it)) {\n          this.disabledLetters[it] = true;\n        }\n      });\n    }\n  }\n}\n</script>\n<style scoped>\nh1 {\n  margin: 40px 0 0;\n  font-size: 42px;\n  color: #39638d;\n  text-transform: capitalize;\n}\n\n.inputWord {\n  width: calc(var(--letterSpacingSize) * 5);\n  margin: 40px auto auto;\n}\n\n.btn {\n  width: 100%;\n  padding: 10px 10px;\n  border: 0px;\n  border-radius: 4px;\n  font-size: 18px;\n}\n\n.btn-normal {\n  background-color: #39638d;\n  color: #ffffff;\n}\n\n.btn-success {\n  background-color: #29a302;\n  color: #ffffff;\n}\n\n.btn-fail {\n  background-color: #a30202;\n  color: #ffffff;\n}\n\n.rules {\n  margin-top:10px;\n  font-size:14px;\n  text-align: left;\n  border-top: 1px solid #f0f0f0;\n}\n</style>\n","<template>\n  <div class=\"line\">\n    <div type=\"text\" class=\"letter\" v-for=\"(letter,index) in letters\" :key=\"index\" v-bind:class=\"getClass(index)\">\n      {{ letter }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'InputWord',\n  props: {\n    lettersCount: String,\n    secretWord: String,\n  },\n  methods: {\n    clear() {\n      this.letters = Array(parseInt(this.lettersCount)).fill('');\n    },\n    printLetter(letter) {\n      if (letter === 'Backspace') {\n        this.removeLetter();\n      }\n      if (letter.length === 1) {\n        this.addLetter(letter);\n      }\n    },\n    addLetter(letter) {\n      for (let i = 0; i < this.lettersCount; i++) {\n        if (this.letters[i] === '') {\n          this.letters[i] = letter;\n          break;\n        }\n      }\n      let wordFilled = this.letters.every((i) => i !== '');\n      if (wordFilled) {\n        this.$emit('event-word-filled', wordFilled, this.letters);\n      }\n    },\n    removeLetter() {\n      for (let i = this.lettersCount - 1; i >= 0; i--) {\n        if (this.letters[i] !== '') {\n          this.letters[i] = '';\n          break;\n        }\n      }\n      this.$emit('event-word-filled', false, this.letters);\n    },\n    getClass(index) {\n      let secret = this.secretWord.split('');\n      let secretLetter = secret[index].toLowerCase();\n      let clientLetter = this.letters[index].toLowerCase();\n      if (secretLetter === clientLetter) {\n        return 'true';\n      }\n      if (secret.includes(clientLetter)) {\n        return 'value';\n      }\n      return 'false';\n    },\n  },\n  data: function () {\n    return {\n      letters: Array(parseInt(this.lettersCount)).fill(''),\n      currentLetterPosition: 0,\n    }\n  }\n}\n</script>\n\n<style scoped>\n.line {\n  display: flex;\n  margin-bottom: 10px;\n}\n\n.letter {\n  width: var(--letterBoxSize);\n  height: var(--letterBoxSize);\n  font-size: var(--letterSize);\n  line-height: var(--letterBoxSize);\n  font-weight: bold;\n  color: #39638d;\n  text-transform: uppercase;\n  border: 1px solid #e0e0e0;\n  margin-left: 5px;\n  margin-right: 5px;\n  border-radius: 4px;\n}\n\n.current-attempt .letter {\n  border-color: #2c3e50;\n}\n\n.next-attempt .letter {\n  background-color: #f0f0f0;\n}\n\n.previous-attempt .true {\n  background-color: #fff93f;\n}\n\n.previous-attempt .false {\n  background-color: #f0f0f0;\n}\n</style>\n","import { render } from \"./InputWord.vue?vue&type=template&id=d63b8a8e&scoped=true\"\nimport script from \"./InputWord.vue?vue&type=script&lang=js\"\nexport * from \"./InputWord.vue?vue&type=script&lang=js\"\n\nimport \"./InputWord.vue?vue&type=style&index=0&id=d63b8a8e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andy/work/vuejs/5bukv/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d63b8a8e\"]])\n\nexport default __exports__","<template>\n  <div class=\"keyboard\">\n    <div class=\"line\" v-for=\"(line,index) in letters\" :key=\"index\">\n      <div class=\"key\" v-bind:class=\"getClass(key)\"\n           v-for=\"(key,index) in line\" :key=\"index\" @click=\"pressKey(key)\">{{ key }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameKeyboard',\n  props: {\n    disabledLetters: Array,\n  },\n  methods: {\n    pressKey(key) {\n      if (this.checkDisabled(key)) {\n        return;\n      }\n      this.$emit('event-key-pressed', key === 'Del' ? 'Backspace' : key);\n    },\n    alertLetter(key) {\n      this.alertKey = key;\n    },\n    getClass(key) {\n      if (this.alertKey === key) {\n        window.setTimeout(() => {\n          this.alertKey = ''\n        }, 500);\n        return 'alert';\n      }\n      return this.checkDisabled(key) ? 'disabled' : '';\n    },\n    checkDisabled(key) {\n      return this.disabledLetters.join().includes(key);\n    },\n  },\n  data: function () {\n    return {\n      alertKey: '',\n      letters: [\n        ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n        ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n        ['я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'Del']\n      ],\n    }\n  }\n}\n</script>\n\n<style scoped>\n.keyboard {\n  margin-top: 20px;\n  width: 100%;\n}\n\n.line {\n  width: 100%;\n  display: flex;\n  margin-bottom: 10px;\n}\n\n.key {\n  cursor: pointer;\n  min-width: 18px;\n  height: 18px;\n  font-size: 12px;\n  line-height: 18px;\n  font-weight: bold;\n  color: #39638d;\n  text-transform: uppercase;\n  border: 1px solid #e0e0e0;\n  margin-left: 3px;\n  margin-right: 3px;\n  border-radius: 4px;\n  webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.key:last-child {\n  width: 48px;\n}\n\n.disabled {\n  background-color: #f0f0f0;\n  color: #a0a0a0;\n  cursor: not-allowed;\n}\n\n.alert {\n  background-color: #c70303;\n  color: #ffffff;\n  cursor: not-allowed;\n}\n</style>\n","import { render } from \"./GameKeyboard.vue?vue&type=template&id=790c57c6&scoped=true\"\nimport script from \"./GameKeyboard.vue?vue&type=script&lang=js\"\nexport * from \"./GameKeyboard.vue?vue&type=script&lang=js\"\n\nimport \"./GameKeyboard.vue?vue&type=style&index=0&id=790c57c6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andy/work/vuejs/5bukv/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-790c57c6\"]])\n\nexport default __exports__","import { render } from \"./FiveLetters.vue?vue&type=template&id=484780f4&scoped=true\"\nimport script from \"./FiveLetters.vue?vue&type=script&lang=js\"\nexport * from \"./FiveLetters.vue?vue&type=script&lang=js\"\n\nimport \"./FiveLetters.vue?vue&type=style&index=0&id=484780f4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andy/work/vuejs/5bukv/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-484780f4\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=035d022d\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=035d022d&lang=css\"\n\nimport exportComponent from \"/home/andy/work/vuejs/5bukv/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_5bukv\"] = self[\"webpackChunk_5bukv\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9814); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_FiveLetters","numberOfAttempts","letters","_createElementVNode","class","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","parseInt","$props","attempt","_component_inputWord","type","key","ref","$options","lettersCount","secretWord","onEventWordFilled","_ctx","onClick","disabled","_hoisted_3","_createVNode","_component_gameKeyboard","disabledLetters","Object","keys","onEventKeyPressed","_hoisted_4","letter","index","name","props","String","methods","clear","this","Array","fill","printLetter","removeLetter","length","addLetter","i","wordFilled","every","$emit","getClass","secret","split","secretLetter","toLowerCase","clientLetter","includes","data","currentLetterPosition","__exports__","line","pressKey","checkDisabled","alertLetter","alertKey","window","setTimeout","join","components","InputWord","GameKeyboard","currentAttempt","filledWord","youWin","youLoose","wordNotExist","attempts","dictionary","computed","Math","floor","random","created","addEventListener","e","catchKeyPress","lowerKey","$refs","setRef","checkWord","startNewGame","keyPress","filledWordParse","status","word","fillBlacklistLetters","forEach","it","FiveLetters","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}